<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="kryptonPalette1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="menuButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        n16heu3AWpv6+qq/jr7xMfTH1x/7ak3d5n3Z1HVWw/tx2Pi29PW3der+mLrvrhz0yT3sE3vZ1GX19ccy
        daxTt2nccL2HTX3uavXXObx/phof/9Tt7atNf39Ve8Famvra/dXUfVCN77O+4f06XPe+qXXq13f892D8
        92Xq71bf1N/Hqepz67LqWK5I701/k34u1TOp99q8ebO3p7Em9XP126X7pEemZ6VfSL+b/ijV0/L/I706
        1XeK/3Oi+vO+/s/+1yoNv7Yafn1V11XV9VZ1DPXq/OpPuv441fFV/33Qf+s6d1D9RqXqD7r+66j6tbh7
        0vBr+8vsr6Oq6+yPoz+u/liH1W3Ym8aXM7z9ff319w3vj6n7pG/qPvm9VOdDdU7Xf0m/0/Wfu145qJ75
        6futUb856jdW6ddXaOpzh5c5vL7+OPpj64+3P/66LX397av627xaw88fXk5/2VP3z/g+Gd8P/W38tUG/
        OugVo35l1C+P+qU19osrVPvBgdT4+PrjH97m/r7o76P+vuvvz6lzaXjuDM+Z4fkyPE/6c6D+fowb/v0Z
        V/+9P3fqsuo66ph+Pr0wnZQenOrB1uG1R9+0VcMe6t7eVgP+jqmelr9bukdX/QrZqk60/VF/+VV/ndXd
        V6mOb9xd97K6vWtt6utXa+o490VT17WnTd2+YXfeTXdaoTqH9qZ64eZamvralZo6vr6p23Rzm7qeaurY
        qqnbt7vqXSu76/b7ufotlLd2U8c11dT9U03dt8PGazW1rntSfzk3Xv/VV199ZPbdI9Kh9Ujc0+rsD/Vd
        obQ3Hcimjnd/BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzPLy8rqNGzfedvPm
        zQdX55577iHSHOvP8f3Vpk2bDlLb1V46bOpzhvWfV/twtyXDHluXE+jIdL90TDolPTe9ML04/Vj6ifST
        XfW/fzzVn9d/f1H6ka76mhcMen7XDw/6oVE/ONH4c3bX+PKH/7//s6nGn9cfbzW8HXW7+vrbWv3ooLof
        +up+GVb31bi6D4fV/Tquv89310+toZ+e6GdGvWTUS0f97EQvW2NTXzu+/OF1D49rfNz9bepv//A+G96n
        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
        RU5ErkJggg==
</value>
  </data>
  <metadata name="sidebarTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>154, 17</value>
  </metadata>
  <metadata name="kryptonManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>276, 17</value>
  </metadata>
  <metadata name="myPallet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>